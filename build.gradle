//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
	dependencies {
		classpath "com.modrinth.minotaur:Minotaur:${libs.versions.minotaur.get()}"
		classpath "com.github.breadmoirai:github-release:${libs.versions.githubRelease.get()}"
	}
}


plugins {
	id 'maven-publish'
	alias libs.plugins.loom
}

version = "$project.baseVersion+$project.branch"
archivesBaseName = project.name
group = 'folk.sisby'

repositories {
	mavenLocal()
}

dependencies {
	minecraft libs.mc
	mappings variantOf(libs.qm) { classifier "intermediary-v2" }
	modImplementation libs.ql
}


processResources {
	final Map<String, String> map = [
			"version"      : version.toString(),
			"mc"           : libs.versions.mc.get(),
			"ql"           : libs.versions.ql.get(),
	]

	inputs.properties(map)
	filesMatching('*.mod.json') { expand(map) }
	filesMatching('mods.toml') { expand(map) }

	from("src/main/resources/mods.toml") {
		rename { "META-INF/mods.toml" }
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}

if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'origins-minus'
		versionNumber = project.version
		versionName = baseVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = [libs.versions.mc.get(), "1.19.4", "1.20", "1.20.1"]
		loaders = ['quilt', 'fabric', 'forge']
		detectLoaders = false
		dependencies {
			required.project "origins"
			required.project "pehkui"
		}
		changelog = "[Direct Datapack Download](https://download-directory.github.io/?url=https://github.com/sisby-folk/origins-minus/tree/v${baseVersion}/src/main/resources) - [v${baseVersion} on Github](https://github.com/sisby-folk/origins-minus/releases/tag/v${baseVersion})"
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "sisby-folk"
		repo "origins-minus"
		tagName 'v' + baseVersion
		releaseName baseVersion
		targetCommitish defaultBranch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
	}
	tasks.githubRelease.dependsOn remapJar
}

if (System.getenv("MODRINTH_TOKEN") && System.getenv("GITHUB_TOKEN")) {
	tasks.register("fullRelease") {
		group "publishing"
		dependsOn "githubRelease"
		dependsOn "modrinth"
	}
}